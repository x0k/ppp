---
export interface Props {
  contentId: string;
}

const { contentId } = Astro.props;
---

<div id="editor-placeholder" data-content-id={contentId}></div>

<script>
  import { makeRemoteTestCompilerFactory } from "testing/actor";

  import { Language } from "@/shared/languages";
  import { mountEditor } from "@/components/svelte-editor";
  import {
    DotnetTestWorker,
    GleamTestWorker,
    GoTestWorker,
    JsTestWorker,
    PhpTestWorker,
    PyTestWorker,
    RustTestWorker,
    TsTestWorker,
  } from "@/adapters/runtime/test-workers";

  import { testCases } from "./tests-data";
  import { jsCode, jsFactory } from "./js";
  import { tsCode, tsFactory } from "./ts";
  import { phpCode, phpFactory } from "./php";
  import { pyCode, pyFactory } from "./python";
  import { goCode, goFactory } from "./go";
  import { rustCode, rustFactory } from "./rust";
  import { gleamCode, gleamFactory } from "./gleam";
  import { csCode, csFactory } from "./csharp";

  mountEditor(testCases, {
    [Language.JavaScript]: {
      initialValue: jsCode,
      factory: makeRemoteTestCompilerFactory(JsTestWorker, jsFactory),
    },
    [Language.TypeScript]: {
      initialValue: tsCode,
      factory: makeRemoteTestCompilerFactory(TsTestWorker, tsFactory),
    },
    [Language.PHP]: {
      initialValue: phpCode,
      factory: makeRemoteTestCompilerFactory(PhpTestWorker, phpFactory),
    },
    [Language.Python]: {
      initialValue: pyCode,
      factory: makeRemoteTestCompilerFactory(PyTestWorker, pyFactory),
    },
    [Language.Go]: {
      initialValue: goCode,
      factory: makeRemoteTestCompilerFactory(GoTestWorker, goFactory),
    },
    [Language.Rust]: {
      initialValue: rustCode,
      factory: makeRemoteTestCompilerFactory(RustTestWorker, rustFactory),
    },
    [Language.Gleam]: {
      initialValue: gleamCode,
      factory: makeRemoteTestCompilerFactory(GleamTestWorker, gleamFactory),
    },
    [Language.CSharp]: {
      initialValue: csCode,
      factory: makeRemoteTestCompilerFactory(DotnetTestWorker, csFactory),
    },
  });
</script>
